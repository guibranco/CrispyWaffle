version: 4.1.{build}
skip_tags: true
image: Visual Studio 2022
configuration: Release

environment:
  SONAR_TOKEN: 
    secure: xLias5AyRmfrqKEmZIn9+wbX1ynwrdfkQJFNrLb0RWIdYPuVQgvrfCFHNgu5bqfw
  CODACY_PROJECT_TOKEN:
    secure: nYmcIWVZOv0EJovfOVz341SHgcc1MxydwKUGOGO6vgjMEkw4GQ9L/N8553uqtICr
  CODECLIMATE_TOKEN:
    secure: 09lSf1NeQ4QhlPM1gerlkaaG8kIPvf/VyOUj81AUZ93uonHUuoADgfJv773g8Dhikm+s/Nx0jjAPQqEA0dqoDUMBULuueYTAquzQII0jlPo=

dotnet_csproj: 
  patch: true 
  file: '**\*.csproj' 
  version: '{version}' 
  package_version: '{version}' 
  assembly_version: '{version}' 
  file_version: '{version}' 
  informational_version: '{version}' 
  
init:
- SET JAVA_HOME=C:\Program Files\Java\jdk19
- SET PATH=%JAVA_HOME%\bin;%PATH%

before_build:
- ps: $env:SOLUTION_NAME = $([io.path]::GetFileNameWithoutExtension($(Get-ChildItem -Path .\* -Include *.sln)))
- ps: $env:SONAR_PROJECT = "$env:APPVEYOR_REPO_NAME" -replace "/","_"
- ps: $env:SONAR_ORGANIZATION = "$env:APPVEYOR_REPO_NAME" -replace "/.*$","-github"
- cmd: nuget restore
- cmd: choco install opencover.portable
- cmd: choco install codecov
- cmd: curl -L https://github.com/codacy/codacy-coverage-reporter/releases/latest/download/codacy-coverage-reporter-assembly.jar > ./codacy-test-reporter.jar
- cmd: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-windows-amd64 > codeclimate-test-reporter.exe
- cmd: dotnet tool install --global dotnet-sonarscanner

build:
  publish_nuget: true
  include_nuget_references: true
  parallel: true
  verbosity: normal

build_script:
- ps: $Params =  "/k:`"$env:SONAR_PROJECT`"", "/o:`"$env:SONAR_ORGANIZATION`"", "/v:`"$env:APPVEYOR_BUILD_NUMBER`""
- ps: $Params += "/d:sonar.host.url=`"https://sonarcloud.io`"", "/d:sonar.login=`"$env:SONAR_TOKEN`""
- ps: $Params += "/d:sonar.exclusions=`"**/bin/**/*,**/obj/**/*`"", "/d:sonar.coverage.exclusions=`"**/$env:SOLUTION_NAME.Tests/**,**/*Tests.cs`""
- ps: $Params += "/d:sonar.cs.opencover.reportsPaths=`"$env:CD\Tests\$env:SOLUTION_NAME.Tests\coverage.opencover.xml`""
- ps: if(-Not $env:APPVEYOR_PULL_REQUEST_NUMBER) { $Params += "/d:sonar.branch.name=`"$env:APPVEYOR_REPO_BRANCH`"" }
- ps: if($env:APPVEYOR_PULL_REQUEST_NUMBER) { $Params += "/d:sonar.pullrequest.key=$env:APPVEYOR_PULL_REQUEST_NUMBER", "/d:sonar.pullrequest.branch=`"$env:APPVEYOR_REPO_BRANCH`"" }
- ps: Start-process "dotnet" "sonarscanner begin $($Params -join ' ')"
- codeclimate-test-reporter before-build
- dotnet build %SOLUTION_NAME%.sln
- ps: $testProjects = (Get-ChildItem -Path .\Tests\**\ -Recurse -Include *.csproj).Fullname
- ps: $coverletFormats = @('cobertura', 'lcov', 'opencover')
- ps: |
    foreach($testProject in $testProjects)
    {
        foreach($coverletFormat in $coverletFormats)
        {
           dotnet test $testProject /p:CollectCoverage=true /p:CoverletOutputFormat="$coverletFormat"
        }
    }
- codeclimate-test-reporter format-coverage -t lcov -o "%CD%\Tests\%SOLUTION_NAME%.Tests\code-climate.json" "%CD%\Tests\%SOLUTION_NAME%.Tests\coverage.info"
- codeclimate-test-reporter upload-coverage -i "%CD%\Tests\%SOLUTION_NAME%.Tests\code-climate.json" -r %CODECLIMATE_TOKEN%
- codecov -f "%CD%\Tests\%SOLUTION_NAME%.Tests\coverage.opencover.xml"
- java -jar ./codacy-test-reporter.jar report -l CSharp -t %CODACY_PROJECT_TOKEN% -r "%CD%\Tests\%SOLUTION_NAME%.Tests\coverage.opencover.xml"
- dotnet sonarscanner end /d:sonar.login="%SONAR_TOKEN%"

after_build:
- xcopy %CD%\Src\%SOLUTION_NAME%\bin\Release\netstandard2.0\*.* %CD%\Build\Core\
- xcopy %CD%\Src\%SOLUTION_NAME%.Configuration\bin\Release\netstandard2.0\*.* %CD%\Build\Configuration\
- xcopy %CD%\Src\%SOLUTION_NAME%.ElasticSearch\bin\Release\netstandard2.0\*.* %CD%\Build\ElasticSearch\
- xcopy %CD%\Src\%SOLUTION_NAME%.Elmah\bin\Release\netstandard2.0\*.* %CD%\Build\Elmah\
- xcopy %CD%\Src\%SOLUTION_NAME%.Log4Net\bin\Release\netstandard2.0\*.* %CD%\Build\Log4Net\
- xcopy %CD%\Src\%SOLUTION_NAME%.RabbitMQ\bin\Release\netstandard2.0\*.* %CD%\Build\RabbitMQ\
- xcopy %CD%\Src\%SOLUTION_NAME%.Redis\bin\Release\netstandard2.0\*.* %CD%\Build\Redis\
- xcopy %CD%\Src\%SOLUTION_NAME%.Utils\bin\Release\netstandard2.0\*.* %CD%\Build\Utils\

- copy %CD%\Src\%SOLUTION_NAME%\bin\Release\%SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.nupkg %SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.nupkg
- copy %CD%\Src\%SOLUTION_NAME%.Configuration\bin\Release\%SOLUTION_NAME%.Configuration.%APPVEYOR_BUILD_VERSION%.nupkg %SOLUTION_NAME%.Configuration.%APPVEYOR_BUILD_VERSION%.nupkg
- copy %CD%\Src\%SOLUTION_NAME%.ElasticSearch\bin\Release\%SOLUTION_NAME%.ElasticSearch.%APPVEYOR_BUILD_VERSION%.nupkg %SOLUTION_NAME%.ElasticSearch.%APPVEYOR_BUILD_VERSION%.nupkg
- copy %CD%\Src\%SOLUTION_NAME%.Elmah\bin\Release\%SOLUTION_NAME%.Elmah.%APPVEYOR_BUILD_VERSION%.nupkg %SOLUTION_NAME%.Elmah.%APPVEYOR_BUILD_VERSION%.nupkg
- copy %CD%\Src\%SOLUTION_NAME%.Log4Net\bin\Release\%SOLUTION_NAME%.Log4Net.%APPVEYOR_BUILD_VERSION%.nupkg %SOLUTION_NAME%.Log4Net.%APPVEYOR_BUILD_VERSION%.nupkg
- copy %CD%\Src\%SOLUTION_NAME%.RabbitMQ\bin\Release\%SOLUTION_NAME%.RabbitMQ.%APPVEYOR_BUILD_VERSION%.nupkg %SOLUTION_NAME%.RabbitMQ.%APPVEYOR_BUILD_VERSION%.nupkg
- copy %CD%\Src\%SOLUTION_NAME%.Redis\bin\Release\%SOLUTION_NAME%.Redis.%APPVEYOR_BUILD_VERSION%.nupkg %SOLUTION_NAME%.Redis.%APPVEYOR_BUILD_VERSION%.nupkg
- copy %CD%\Src\%SOLUTION_NAME%.Utils\bin\Release\%SOLUTION_NAME%.Utils.%APPVEYOR_BUILD_VERSION%.nupkg %SOLUTION_NAME%.Utils.%APPVEYOR_BUILD_VERSION%.nupkg

- rd /s /q %CD%\Src\%SOLUTION_NAME%\bin\Release\
- xcopy %CD%\Tests\%SOLUTION_NAME%.Tests\*.xml %CD%\Coverage\
- xcopy %CD%\Tests\%SOLUTION_NAME%.Tests\*.json %CD%\Coverage\
- xcopy %CD%\Tests\%SOLUTION_NAME%.Tests\*.info %CD%\Coverage\
- cd %CD%

- 7z a -tzip -mx9 "%SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.Core.zip" Build\Core
- 7z a -tzip -mx9 "%SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.Configuration.zip" Build\Configuration
- 7z a -tzip -mx9 "%SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.ElasticSearch.zip" Build\ElasticSearch
- 7z a -tzip -mx9 "%SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.Elmah.zip" Build\Elmah
- 7z a -tzip -mx9 "%SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.Log4Net.zip" Build\Log4Net
- 7z a -tzip -mx9 "%SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.RabbitMQ.zip" Build\RabbitMQ
- 7z a -tzip -mx9 "%SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.Redis.zip" Build\Redis
- 7z a -tzip -mx9 "%SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.Utils.zip" Build\Utils
- 7z a -tzip -mx9 "%SOLUTION_NAME%.%APPVEYOR_BUILD_VERSION%.Coverage.zip" Coverage

artifacts:
- path: $(SOLUTION_NAME).%APPVEYOR_BUILD_VERSION%.Core.zip
  name: ZipFileCore
- path: $(SOLUTION_NAME).%APPVEYOR_BUILD_VERSION%.Configuration.zip
  name: ZipFileConfiguration
- path: $(SOLUTION_NAME).%APPVEYOR_BUILD_VERSION%.ElasticSearch.zip
  name: ZipFileElasticSearch
- path: $(SOLUTION_NAME).%APPVEYOR_BUILD_VERSION%.Elmah.zip
  name: ZipFileElmah
- path: $(SOLUTION_NAME).%APPVEYOR_BUILD_VERSION%.Log4Net.zip
  name: ZipFileLog4Net
- path: $(SOLUTION_NAME).%APPVEYOR_BUILD_VERSION%.RabbitMQ.zip
  name: ZipFileRabbitMQ
- path: $(SOLUTION_NAME).%APPVEYOR_BUILD_VERSION%.Redis.zip
  name: ZipFileRedis
- path: $(SOLUTION_NAME).%APPVEYOR_BUILD_VERSION%.Utils.zip
  name: ZipFileUtils

- path: $(SOLUTION_NAME).%APPVEYOR_BUILD_VERSION%.nupkg
  name: PackageCore
- path: $(SOLUTION_NAME).Configuration.%APPVEYOR_BUILD_VERSION%.nupkg
  name: PackageConfiguration
- path: $(SOLUTION_NAME).ElasticSearch.%APPVEYOR_BUILD_VERSION%.nupkg
  name: PackageElasticSearch
- path: $(SOLUTION_NAME).Elmah.%APPVEYOR_BUILD_VERSION%.nupkg
  name: PackageElmah
- path: $(SOLUTION_NAME).Log4Net.%APPVEYOR_BUILD_VERSION%.nupkg
  name: PackageLog4Net
- path: $(SOLUTION_NAME).RabbitMQ.%APPVEYOR_BUILD_VERSION%.nupkg
  name: PackageRabbitMQ
- path: $(SOLUTION_NAME).Redis.%APPVEYOR_BUILD_VERSION%.nupkg
  name: PackageRedis
- path: $(SOLUTION_NAME).Utils.%APPVEYOR_BUILD_VERSION%.nupkg
  name: PackageUtils
- path: $(SOLUTION_NAME).%APPVEYOR_BUILD_VERSION%.Coverage.zip
  name: Coverage

deploy:
- provider: Environment
  name: NuGet
  on:
   branch: main
  artifact: PackageCore
  
- provider: Environment
  name: NuGet
  on:
   branch: main
  artifact: PackageConfiguration
  
- provider: Environment
  name: NuGet
  on:
   branch: main
  artifact: PackageElasticSearch
  
- provider: Environment
  name: NuGet
  on:
   branch: main
  artifact: PackageElmah
  
- provider: Environment
  name: NuGet
  on:
   branch: main
  artifact: PackageLog4Net
  
- provider: Environment
  name: NuGet
  on:
   branch: main
  artifact: PackageRabbitMQ
  
- provider: Environment
  name: NuGet
  on:
   branch: main
  artifact: PackageRedis
  
- provider: Environment
  name: NuGet
  on:
   branch: main
  artifact: PackageUtils

- provider: GitHub
  on:
   branch: main
  tag: $(appveyor_build_version)
  auth_token: $(GITHUB_TOKEN)
  force_update: true
  artifact: ZipFileCore, ZipFileConfiguration, ZipFileElasticSearch, ZipFileElmah, ZipFileLog4Net, ZipFileRabbitMQ, ZipFileRedis, ZipFileUtils, Coverage
